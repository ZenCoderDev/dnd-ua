name: Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: popeye-solutions
  IMAGE_NAME: popeye-back

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_OWNER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          platforms: linux/amd64
          outputs: type=registry
      - name: Move cache
        shell: bash
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: production
      url: https://admin.popeyesolutions.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "docker-compose.prod.yml,entrypoint.prod.sh"
          target: "/var/www/admin_popeye_usr/data/www/admin.popeyesolutions.com"
          strip_components: 0

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ env.REGISTRY_OWNER }} --password-stdin
            cd /var/www/admin_popeye_usr/data/www/admin.popeyesolutions.com
            
            mkdir -p media
            mkdir -p allstaticfiles
            
            sudo chown -R www-data:www-data media allstaticfiles
            sudo chmod -R 775 media allstaticfiles
            
            docker compose -f docker-compose.prod.yml stop back 
            docker compose -f docker-compose.prod.yml rm -f back 
            
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            
            docker image prune -f
