name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: https://tbdices.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "docker-compose.prod.yml"
          target: "/var/www/tbdices_com_usr/data/www/tbdices.com"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /var/www/tbdices_com_usr/data/www/tbdices.com

            docker compose -f docker-compose.prod.yml up -d db

            until docker compose -f docker-compose.prod.yml exec -T db pg_isready -U $POSTGRES_USER; do
              echo "Waiting for DB to be ready..."
              sleep 2
            done

            npm install

            npx prisma migrate deploy

            if pm2 list | grep -q "tbdices"; then
              pm2 restart tbdices
            else
              pm2 start npm --name "tbdices" -- start
            fi