name: Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: ZenCoderDev

permissions:
  contents: read
  packages: write

jobs:
  build_and_copy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build Next.js
        run: npm run build

      - name: Copy build to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "package.json,package-lock.json,next.config.ts,.next,prisma.config.ts,prisma,public"
          target: /var/www/tbdices_com_usr/data/www/tbdices.com
          strip_components: 0

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_copy
    steps:
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ env.REGISTRY_OWNER }} --password-stdin

            set -e
            cd /var/www/tbdices_com_usr/data/www/tbdices.com

            docker compose -f docker-compose.yml up -d postgres

            echo "Waiting for PostgreSQL to be ready..."
            until docker exec -i dnd_postgres pg_isready -U postgres -q; do
              sleep 1
            done
            echo "PostgreSQL is ready!"

            echo "Installing production dependencies..."
            npm install --production

            echo "Applying Prisma migrations..."
            npx prisma migrate deploy

            echo "Starting or restarting Next.js with PM2..."
            if pm2 list | grep -q "tbdices"; then
              pm2 restart tbdices
            else
              pm2 start "npm run start" --name "tbdices" --cwd /var/www/tbdices_com_usr/data/www/tbdices.com
            fi

            echo "Starting Prisma Studio..."
            if pm2 list | grep -q "prisma-studio"; then
              pm2 restart prisma-studio
            else
              pm2 start "npx prisma studio --port 5555 --browser none" --name "prisma-studio"
            fi

            pm2 save
            echo "Deployment finished successfully!"
