name: Deploy

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  REGISTRY_OWNER: ZenCoderDev

permissions:
  contents: read
  packages: write

jobs:
  build_and_copy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build Next.js
        run: npm run build

      - name: Copy build to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "package.json,package-lock.json,next.config.ts,.next,prisma.config.ts,prisma,public"
          target: /var/www/tbdices_com_usr/data/www/tbdices.com
          strip_components: 0

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_copy
    steps:
    - name: Deploy on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          set -e
          cd /var/www/tbdices_com_usr/data/www/tbdices.com

          echo "==> Проверяем volume для базы..."
          docker volume ls | grep -q postgres_data || docker volume create postgres_data

          echo "==> Запускаем контейнеры..."
          docker compose -f docker-compose.yml up -d --no-recreate

          echo "==> Ждём, пока Postgres поднимется..."
          until docker exec -i dnd_postgres pg_isready -U postgres -q; do
            sleep 1
          done
          echo "PostgreSQL готов!"

          echo "==> Проверяем, пустая ли база..."
          if ! docker exec -i dnd_postgres psql -U postgres -d dnddb -tAc "SELECT 1 FROM information_schema.tables WHERE table_schema='public' LIMIT 1;" | grep -q 1; then
            echo "База пустая → восстанавливаем backup..."
            docker exec -i dnd_postgres psql -U postgres -d dnddb < /root/backup_utf8.sql
            echo "✅ Backup восстановлен!"
          else
            echo "База уже содержит таблицы → пропускаем restore."
          fi

          echo "==> Устанавливаем прод-зависимости..."
          npm install --production

          echo "==> Накатываем миграции Prisma..."
          npx prisma migrate deploy

          echo "==> Рестартуем Next.js..."
          if pm2 list | grep -q "tbdices"; then
            pm2 restart tbdices
          else
            pm2 start "npm run start" --name "tbdices" --cwd /var/www/tbdices_com_usr/data/www/tbdices.com
          fi

          echo "==> Рестартуем Prisma Studio..."
          if pm2 list | grep -q "prisma-studio"; then
            pm2 restart prisma-studio
          else
            pm2 start "npx prisma studio --port 5555 --browser none" --name "prisma-studio"
          fi

          pm2 save
          echo "✅ Deploy completed!"
