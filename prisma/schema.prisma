// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Background {
  id          Int                 @id @default(autoincrement())
  name        String
  description String
  skills      String[]
  languages   Int
  equipment   String[]
  features    BackgroundFeature[] // теперь массив
}

model BackgroundFeature {
  id           Int         @id @default(autoincrement())
  name         String
  description  String
  background   Background? @relation(fields: [backgroundId], references: [id])
  backgroundId Int?
}

model Class {
  id          String  @id
  name        String  @unique
  description String
  image       String?

  long       ClassLong?
  spells     Spell[]    @relation("ClassSpells")
  subclasses Subclass[] @relation("ClassToSubclass") // ✅ имя связи
}

model ClassLong {
  id             String   @id
  source         String
  hitDice        String
  image          String?
  primaryAbility String[]
  savingThrows   String[]
  skillsChoose   Int
  skillsFrom     String[]
  description    String
  progression    Json
  features       Json

  armor     Json @default("[]")
  weapons   Json @default("[]")
  tools     Json @default("[]")
  equipment Json @default("[]")

  class Class @relation(fields: [id], references: [id])
}

model Race {
  id             String    @id
  name           String
  image          String?
  source         String
  version        String
  size           String
  speed          String[]
  abilityBonuses String[]
  languages      String[]
  darkvision     String?
  traits         Trait[]
  subraces       SubRace[]
}

model Trait {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  race        Race?   @relation(fields: [raceId], references: [id])
  raceId      String?
}

model SubRace {
  id             String  @id
  name           String
  image          String?
  abilityBonuses String?
  traits         Json
  race           Race?   @relation(fields: [raceId], references: [id])
  raceId         String?
}

model Spell {
  id          Int     @id @default(autoincrement())
  nameUa      String
  nameEn      String
  school      String
  level       Int
  castingTime String
  range       String
  components  String
  duration    String
  descShort   String?
  description String
  effects     Json?
  damage      Json?
  classes     Class[] @relation("ClassSpells")
  source      String  @default("PHB")
}

model Subclass {
  id          String @id
  nameEn      String
  nameUk      String
  description String
  features    Json
  classId     String
  class       Class  @relation("ClassToSubclass", fields: [classId], references: [id]) // ✅ имя совпадает
}

model MagicItem {
  id          Int     @id @default(autoincrement())
  nameUa      String
  nameEn      String
  rarity      String
  type        String
  attunement  Boolean
  description String
  effects     Json
}

model Weapon {
  id          Int              @id @default(autoincrement())
  name        String
  type        String           
  cost        String           
  damage      String           
  damageType  String          
  weight      Float
  properties  WeaponOnProperty[]

  @@map("weapons")
}

model Property {
  id          String            @id   
  name        String
  description String
  weapons     WeaponOnProperty[]

  @@map("properties")
}

model WeaponOnProperty {
  weaponId   Int
  propertyId String

  weapon     Weapon   @relation(fields: [weaponId], references: [id])
  property   Property @relation(fields: [propertyId], references: [id])

  @@id([weaponId, propertyId])
  @@map("weapons_on_properties")
}


model Armor {
  id                  Int     @id @default(autoincrement())
  name                String  @unique
  type                String  // light_armor | medium_armor | heavy_armor | shield
  cost                String
  ac                  Int
  dexBonus            Boolean?
  dexBonusMax         Int?
  strengthReq         Int?
  stealthDisadvantage Boolean
  weight              Float

  @@map("armor")
}

model Ammunition {
  id       Int    @id @default(autoincrement())
  name     String @unique
  type     String   // ammunition_arrow | ammunition_bolt | ammunition_sling_bullet | ammunition_blowgun_needle
  cost     String
  weight   Float
  quantity Int

  @@map("ammunition")
}

model Tool {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  type     String
  cost     String
  weight   Float
  contents String[] // масив рядків

  @@map("tools")
}

model Gear {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  type        String
  cost        String
  weight      Float
  description String?

  @@map("gear")
}

model MountOrVehicle {
  id               Int     @id @default(autoincrement())
  name             String  @unique
  type             String  // mount | vehicle_land | vehicle_water
  cost             String
  speed            Int     // для транспорту без власного руху = 0
  carryingCapacity Int
  description      String?

  @@map("mounts_vehicles")
}

model TradeGood {
  id          Int    @id @default(autoincrement())
  name        String @unique
  type        String
  cost        String
  description String?

  @@map("trade_goods")
}

model Tack {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  type        String  // tack_saddle_riding, tack_harness, vehicle_cart тощо
  cost        String
  weight      Float
  description String?

  @@map("tack")
}

model GameRule {
  id          Int     @id @default(autoincrement())
  ruleId      String  @unique           // унікальний технічний id, напр. "action_attack"
  category    String                    // Core | Combat | Exploration | Magic | Economy | Social
  subCategory String?                   // Actions, Turn Order, Spellcasting etc.
  name        String
  description String
  source      String?                   // опційно: "PHB p. XXX" або "SRD"
  createdAt   DateTime @default(now())

  @@map("game_rules")
}





